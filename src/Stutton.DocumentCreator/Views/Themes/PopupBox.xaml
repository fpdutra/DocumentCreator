<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controlzEx="clr-namespace:ControlzEx;assembly=MaterialDesignThemes.Wpf"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Menu.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToolTip.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:NullableToVisibilityConverter x:Key="NullVisibilityConverter" />
    <converters:NullableToVisibilityConverter x:Key="InvertedNullVisibilityConverter"
                                              NotNullValue="Collapsed"
                                              NullValue="Visible" />
    <converters:BrushRoundConverter x:Key="BrushRoundConverter" />

    <Style x:Key="TestDocPopupBox" TargetType="{x:Type wpf:PopupBox}">
        <Setter Property="ToggleContent" Value="{StaticResource MaterialDesignPopupBoxToggleContent}" />
        <Setter Property="wpf:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth3" />
        <Setter Property="TextElement.FontWeight" Value="Normal" />
        <Setter Property="Padding" Value="0,8,0,8" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpf:PopupBox}">
                    <ControlTemplate.Resources>
                        <Style BasedOn="{StaticResource MaterialDesignSeparator}" TargetType="Separator" />
                        <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="LightGray">
                                            <wpf:Ripple Padding="{TemplateBinding Padding}"
                                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        wpf:RippleAssist.IsCentered="True"
                                                        ClipToBounds="True"
                                                        Content="{TemplateBinding Content}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        Focusable="False"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <ToggleButton x:Name="PART_Toggle"
                                      VerticalAlignment="Center"
                                      HorizontalContentAlignment="Stretch"
                                      VerticalContentAlignment="Center"
                                      Content="{TemplateBinding ToggleContent}"
                                      ContentTemplate="{TemplateBinding ToggleContentTemplate}"
                                      Cursor="Hand"
                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
                                      Style="{StaticResource ToggleButtonStyle}" />
                        <controlzEx:PopupEx x:Name="PART_Popup"
                                            AllowsTransparency="True"
                                            CustomPopupPlacementCallback="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupPlacementMethod}"
                                            HorizontalOffset="5"
                                            IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
                                            Placement="Custom"
                                            PlacementTarget="{Binding ElementName=PART_Toggle}"
                                            PopupAnimation="Fade"
                                            VerticalOffset="5">
                            <wpf:Card Margin="5"
                                      Padding="{TemplateBinding Padding}"
                                      Content="{TemplateBinding PopupContent}"
                                      ContentTemplate="{TemplateBinding PopupContentTemplate}"
                                      FontSize="15"
                                      FontWeight="Regular"
                                      Foreground="{DynamicResource MaterialDesignBody}"
                                      RenderOptions.ClearTypeHint="Enabled">
                                <wpf:Card.Resources>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="VerticalContentAlignment" Value="Bottom" />
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        <Setter Property="Padding" Value="16,0,16,16" />
                                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Grid>
                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup Name="CommonStates">
                                                                <VisualStateGroup.Transitions>
                                                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                            <CircleEase EasingMode="EaseOut" />
                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                    </VisualTransition>
                                                                </VisualStateGroup.Transitions>
                                                                <VisualState Name="Normal" />
                                                                <VisualState Name="MouseOver">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                                                         Storyboard.TargetProperty="Opacity"
                                                                                         To="0.1"
                                                                                         Duration="0" />
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState Name="Disabled">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                                         To="0.48"
                                                                                         Duration="0" />
                                                                    </Storyboard>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <Border x:Name="MouseOverBorder"
                                                                Background="{TemplateBinding Foreground,
                                                                                             Converter={StaticResource BrushRoundConverter}}"
                                                                Opacity="0" />
                                                        <wpf:Ripple MinHeight="48"
                                                                    Padding="{TemplateBinding Padding}"
                                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                    Content="{TemplateBinding Content}"
                                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                                    Feedback="{TemplateBinding Foreground,
                                                                                               Converter={StaticResource BrushRoundConverter}}"
                                                                    Focusable="False"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </wpf:Card.Resources>
                            </wpf:Card>
                        </controlzEx:PopupEx>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>