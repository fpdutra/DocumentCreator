<UserControl x:Class="Stutton.DocumentCreator.Views.Templates.TemplateSteps.WorkItemQueryStep"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:Stutton.DocumentCreator.Views.Controls"
             xmlns:converters="clr-namespace:Stutton.DocumentCreator.Views.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Stutton.DocumentCreator.Views.Templates.TemplateSteps"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:templateSteps="clr-namespace:Stutton.DocumentCreator.ViewModels.Templates.TemplateSteps"
             xmlns:workItems="clr-namespace:Stutton.DocumentCreator.Models.WorkItems"
             d:DataContext="{d:DesignInstance templateSteps:WorkItemQueryStepViewModel}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:ValueCompareToVisibilityConverter x:Key="InOpToVisibilityConverter" CompareToValue="{x:Static workItems:WorkItemQueryExpressionOperator.In}" />
            <converters:ValueCompareToVisibilityConverter x:Key="InverseInOpToVisibilityConverter"
                                                          CompareToValue="{x:Static workItems:WorkItemQueryExpressionOperator.In}"
                                                          FalseValue="Visible"
                                                          TrueValue="Collapsed" />
            <converters:FlattenListConverter x:Key="ListOfStringExpanderConverter"
                                             PropertyName="Value"
                                             Separator="," />

            <ObjectDataProvider x:Key="OperatorEnumDataProvider"
                                MethodName="GetValues"
                                ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="workItems:WorkItemQueryExpressionOperator" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <DataTemplate DataType="{x:Type workItems:WorkItemQueryExpressionModel}">
                <controls:EditorExpander IsExpanded="{Binding IsExpanded}">
                    <Expander.Header>
                        <Grid Height="32">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="80" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock VerticalAlignment="Center"
                                       Text="{Binding ElementName=WorkItemFieldComboBox, Path=Text}" />
                            <TextBlock Grid.Column="1"
                                       Margin="8,0"
                                       VerticalAlignment="Center"
                                       Text="{Binding Operator}" />
                            <TextBlock Grid.Column="2"
                                       VerticalAlignment="Center"
                                       Visibility="{Binding Operator, Converter={StaticResource InverseInOpToVisibilityConverter}}"
                                       Text="{Binding Value}"/>
                            <TextBlock Grid.Column="2"
                                       VerticalAlignment="Center"
                                       Visibility="{Binding Operator, Converter={StaticResource InOpToVisibilityConverter}}"
                                       Text="{Binding Values, Converter={StaticResource ListOfStringExpanderConverter}}" />
                        </Grid>
                    </Expander.Header>
                    <controls:EditorExpander.ToolBarItems>
                        <Button Style="{DynamicResource MaterialDesignFlatButton}"
                                Command="{Binding DeleteCommand}">
                            <materialDesign:PackIcon Kind="Delete"
                                                     Width="24"
                                                     Height="24"/>
                        </Button>
                    </controls:EditorExpander.ToolBarItems>
                    <Grid Margin="0,24">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <ComboBox Name="WorkItemFieldComboBox" 
                                  SelectedValue="{Binding Field, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  SelectedValuePath="ReferenceName"
                                  DisplayMemberPath="Name"
                                  ItemsSource="{Binding DataContext.WorkItemFields, Mode=OneTime, RelativeSource={RelativeSource AncestorType={x:Type local:WorkItemQueryStep}}}"
                                  MinWidth="200"
                                  VerticalAlignment="Top"
                                  materialDesign:HintAssist.Hint="Field"
                                  IsEditable="True"
                                  Style="{DynamicResource MaterialDesignFloatingHintComboBox}">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>

                        <ComboBox Grid.Column="1"
                                  MinWidth="120"
                                  Margin="8,0"
                                  VerticalAlignment="Top"
                                  materialDesign:HintAssist.Hint="Operator"
                                  IsEditable="False"
                                  ItemsSource="{Binding Source={StaticResource OperatorEnumDataProvider}}"
                                  SelectedItem="{Binding Operator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Style="{DynamicResource MaterialDesignFloatingHintComboBox}" />

                        <TextBox Grid.Column="2"
                                 Height="39"
                                 MinWidth="200"
                                 VerticalAlignment="Top"
                                 materialDesign:HintAssist.Hint="Value"
                                 Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                                 Text="{Binding Value}"
                                 Visibility="{Binding Operator, Converter={StaticResource InverseInOpToVisibilityConverter}}" />

                        <StackPanel Grid.Column="2"
                                    VerticalAlignment="Top"
                                    Visibility="{Binding Operator, Converter={StaticResource InOpToVisibilityConverter}}">
                            <TextBlock Style="{DynamicResource MaterialDesignCaptionTextBlock}"
                                       Opacity="0.5"
                                       FontSize="10"
                                       Text="Value Set"/>
                            <ItemsControl ItemsSource="{Binding Values}"
                                          Margin="0,-4,0,0">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <Button DockPanel.Dock="Right" 
                                                    Style="{DynamicResource MaterialDesignFlatButton}"
                                                    Command="{Binding DeleteCommand}">
                                                <materialDesign:PackIcon Kind="Delete"
                                                                         Width="24"
                                                                         Height="24" />
                                            </Button>
                                            <TextBox Height="28"
                                                     MinWidth="100"
                                                     materialDesign:HintAssist.Hint="Value"
                                                     Text="{Binding Value}" />
                                            
                                        </DockPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <Button Margin="0,4,0,0"
                                    Command="{Binding AddInValueCommand}"
                                    CommandParameter="{Binding}"
                                    HorizontalAlignment="Right"
                                    Style="{DynamicResource MaterialDesignFlatButton}"
                                    ToolTip="Add Value">
                                <materialDesign:PackIcon Kind="Plus"
                                                         Width="24"
                                                         Height="24"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </controls:EditorExpander>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel>

        <ItemsControl ItemsSource="{Binding Model.Expressions}" />

        <DockPanel Margin="24,4,0,0" LastChildFill="False">
            <Button Command="{Binding AddExpressionCommand}"
                    DockPanel.Dock="Right"
                    Style="{DynamicResource MaterialDesignFlatButton}">
                <materialDesign:PackIcon Width="24"
                                         Height="24"
                                         Kind="Plus" />
            </Button>
        </DockPanel>

    </StackPanel>
</UserControl>
