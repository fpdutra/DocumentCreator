<UserControl x:Class="Stutton.DocumentCreator.Views.ShellView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:Stutton.DocumentCreator.Views.Controls"
             xmlns:converters="clr-namespace:Stutton.DocumentCreator.Views.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:Stutton.DocumentCreator.Views"
             xmlns:materialConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:Stutton.DocumentCreator.ViewModels"
             d:DataContext="{d:DesignInstance {x:Type viewModels:ShellViewModel}}"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="PageTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <materialConverters:BooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"
                                                             FalseValue="Visible"
                                                             TrueValue="Hidden" />

            <converters:ValueCompareToVisibilityConverter x:Key="NullToVisibilityConverter" IsInverted="True" />
            <converters:BooleanAndMultiConverter x:Key="BooleanAndMultiConverter" />
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <DockPanel>
            <materialDesign:ColorZone x:Name="TitleColorZone"
                                      Height="48"
                                      materialDesign:ShadowAssist.ShadowDepth="Depth0"
                                      DockPanel.Dock="Top"
                                      Mode="PrimaryMid">
                <DockPanel Margin="8,0,0,0">
                    <Grid>
                        <ToggleButton Width="32"
                                      WindowChrome.IsHitTestVisibleInChrome="True"
                                      IsChecked="{Binding Navigator.CurrentPage.IsInEditMode, Mode=OneWay}"
                                      Visibility="{Binding Navigator.CurrentPage.IsInEditMode, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding Navigator.CurrentPage.BackCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ToggleButton.Style>
                                <Style BasedOn="{StaticResource MaterialDesignHamburgerToggleButton}" TargetType="{x:Type ToggleButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Navigator.CurrentPage.IsInEditMode, Mode=OneWay}" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <Button VerticalAlignment="Center"
                                Command="{Binding ToggleMenuCommand}"
                                DockPanel.Dock="Left"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Style="{DynamicResource MaterialDesignToolForegroundButton}"
                                Visibility="{Binding Navigator.CurrentPage.IsInEditMode, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                            <materialDesign:PackIcon Width="32"
                                                     Height="32"
                                                     VerticalAlignment="Center"
                                                     Kind="Menu" />
                        </Button>

                    </Grid>

                    <Button Width="44"
                            Height="48"
                            DockPanel.Dock="Right"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Command="{Binding CloseCommand}">
                        <materialDesign:PackIcon Kind="Close"
                                                 Width="24"
                                                 Height="24"/>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter VerticalAlignment="Center"
                                                                  HorizontalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFE6002B"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Navigator.CurrentPage.IsInEditMode, Mode=OneWay}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Width="44"
                            Height="48"
                            DockPanel.Dock="Right"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Command="{Binding ToggleMaxMinCommand}">
                        <materialDesign:PackIcon Kind="WindowMaximize"
                                                 Width="24"
                                                 Height="24"/>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border Background="{TemplateBinding Background}"/>
                                                <ContentPresenter VerticalAlignment="Center"
                                                                  HorizontalAlignment="Center"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#33000000"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Navigator.CurrentPage.IsInEditMode, Mode=OneWay}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Width="44"
                            Height="48"
                            DockPanel.Dock="Right"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Command="{Binding MinimizeCommand}">
                        <materialDesign:PackIcon Kind="WindowMinimize"
                                                 Width="24"
                                                 Height="24"/>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border Background="{TemplateBinding Background}"/>
                                                <ContentPresenter VerticalAlignment="Center"
                                                                  HorizontalAlignment="Center"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#33000000"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Navigator.CurrentPage.IsInEditMode, Mode=OneWay}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <materialDesign:PopupBox DockPanel.Dock="Right"
                                             PlacementMode="BottomAndAlignRightEdges"
                                             StaysOpen="False"
                                             WindowChrome.IsHitTestVisibleInChrome="True">
                        <materialDesign:PopupBox.Style>
                            <Style BasedOn="{StaticResource {x:Type materialDesign:PopupBox}}" TargetType="{x:Type materialDesign:PopupBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Navigator.CurrentPage.IsInEditMode, Mode=OneWay}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:PopupBox.Style>

                        <StackPanel>
                            <Button Command="{Binding ShowAboutCommand}" Content="About" />
                        </StackPanel>
                    </materialDesign:PopupBox>

                    <Ellipse Width="32"
                             Height="32"
                             DockPanel.Dock="Right"
                             Visibility="{Binding ProfilePicture, Converter={StaticResource NullToVisibilityConverter}}">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{Binding ProfilePicture}" Stretch="UniformToFill" />
                        </Ellipse.Fill>
                    </Ellipse>

                    <Button VerticalAlignment="Center"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Command="{Binding Navigator.CurrentPage.ToolBar.Refresh.Command}"
                            DockPanel.Dock="Right"
                            Style="{DynamicResource MaterialDesignToolForegroundButton}"
                            Visibility="{Binding Navigator.CurrentPage.ToolBar.Refresh.IsShown, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <materialDesign:PackIcon Width="24"
                                                 Height="24"
                                                 Kind="Refresh" />
                    </Button>

                    <Button VerticalAlignment="Center"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Command="{Binding Navigator.CurrentPage.ToolBar.Save.Command}"
                            DockPanel.Dock="Right"
                            Style="{DynamicResource MaterialDesignToolForegroundButton}"
                            ToolTip="Save"
                            Visibility="{Binding Navigator.CurrentPage.ToolBar.Save.IsShown, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <materialDesign:PackIcon Width="24"
                                                 Height="24"
                                                 Foreground="{DynamicResource MaterialDesignBody}"
                                                 Kind="ContentSave" />
                    </Button>

                    <Button VerticalAlignment="Center"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Command="{Binding Navigator.CurrentPage.ToolBar.Export.Command}"
                            DockPanel.Dock="Right"
                            Style="{DynamicResource MaterialDesignToolForegroundButton}"
                            ToolTip="Save"
                            Visibility="{Binding Navigator.CurrentPage.ToolBar.Export.IsShown, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <materialDesign:PackIcon Width="24"
                                                 Height="24"
                                                 Foreground="{DynamicResource MaterialDesignBody}"
                                                 Kind="FileExport" />
                    </Button>

                    <TextBlock Margin="24,0,0,0"
                               VerticalAlignment="Center"
                               DockPanel.Dock="Left"
                               FontSize="22"
                               Text="{Binding Navigator.CurrentPage.Title}">
                        <TextBlock.Style>
                            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Navigator.CurrentPage.IsInEditMode}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <materialDesign:ColorZone Height="40"
                                              WindowChrome.IsHitTestVisibleInChrome="True"
                                              MaxWidth="400"
                                              Margin="24,0,0,0"
                                              Padding="8,0,8,0"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Center"
                                              Panel.ZIndex="1"
                                              materialDesign:ShadowAssist.ShadowDepth="Depth1"
                                              CornerRadius="2"
                                              Mode="Standard"
                                              Visibility="Collapsed">
                        <DockPanel>
                            <Button Command="{Binding Navigator.CurrentPage.ToolBar.SearchBar.Command}"
                                    DockPanel.Dock="Left"
                                    Style="{DynamicResource MaterialDesignToolButton}">
                                <materialDesign:PackIcon Kind="Magnify" Opacity=".56" />
                            </Button>
                            <TextBox Margin="8,0,0,0"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     materialDesign:HintAssist.Hint="{Binding Navigator.CurrentPage.ToolBar.SearchBar.Hint}"
                                     materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                                     BorderThickness="0"
                                     Text="{Binding Navigator.CurrentPage.ToolBar.SearchBar.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Return" Command="{Binding Navigator.CurrentPage.ToolBar.SearchBar.Command}" />
                                </TextBox.InputBindings>
                            </TextBox>
                        </DockPanel>
                    </materialDesign:ColorZone>

                </DockPanel>
            </materialDesign:ColorZone>

            <controls:SideBarHost>
                <controls:SideBarHost.IsDrawerOpen>
                    <MultiBinding Converter="{StaticResource BooleanAndMultiConverter}">
                        <Binding Mode="OneWay" Path="IsSideBarShown" />
                        <Binding Converter="{StaticResource InverseBooleanConverter}"
                                 Mode="OneWay"
                                 Path="Navigator.CurrentPage.IsInEditMode" />
                    </MultiBinding>
                </controls:SideBarHost.IsDrawerOpen>
                <controls:SideBarHost.DrawerContent>
                    <ListBox x:Name="PagesListBox"
                             Margin="0,16,0,16"
                             ItemsSource="{Binding Navigator.Pages}"
                             SelectedIndex="0"
                             SelectionChanged="PagesListBox_SelectionChanged">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DockPanel MinWidth="200" MinHeight="32">
                                    <TextBlock Margin="32,0,32,0"
                                               VerticalAlignment="Center"
                                               Opacity=".69"
                                               Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
                                               Text="{Binding Title}" />
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </controls:SideBarHost.DrawerContent>
                <DockPanel>
                    <Grid>
                        <ContentControl Content="{Binding Navigator.CurrentPage}" />
                    </Grid>
                </DockPanel>
            </controls:SideBarHost>
        </DockPanel>

        <materialDesign:Snackbar x:Name="MainSnackbar" MessageQueue="{materialDesign:MessageQueue}" />

    </Grid>
</UserControl>
